package com.my.board.service;

import java.sql.Date;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.my.board.dao.BoardRepository;
import com.my.board.dao.ReplyRepository;
import com.my.board.dto.Board;
import com.my.board.dto.Reply;
import com.my.board.entity.BoardEntity;
import com.my.board.entity.ReplyEntity;
import com.my.exception.AddException;
import com.my.exception.FindException;
import com.my.exception.ModifyException;
import com.my.exception.RemoveException;

@Service
public class BoardService {
	@Autowired
	private BoardRepository br;
	
	@Autowired
	private ReplyRepository rr;
	
	public List<Board> findAll() throws FindException {
		List<BoardEntity> boardList = br.selectAll();
		List<Board> boards = new ArrayList<>();
		for(BoardEntity b: boardList) {
			Board board = new Board();
			board.setBoardContent(b.getBoardContent());
			board.setBoardDt(b.getBoardDt());
			board.setBoardId(b.getBoardId());
			board.setBoardNo(b.getBoardNo());
			board.setBoardTitle(b.getBoardTitle());
			
			List<ReplyEntity> replyList = b.getReplies();
			List<Reply> replies = new ArrayList<>();
			for(ReplyEntity r: replyList) {
				Reply reply = new Reply();
				reply.setReplyBoardNo(r.getReplyBoardNo());
				reply.setReplyContent(r.getReplyContent());
				reply.setReplyDt(r.getReplyDt());
				reply.setReplyId(r.getReplyId());
				reply.setReplyNo(r.getReplyNo());
				reply.setReplyParentNo(r.getReplyParentNo());
			}
			board.setReplies(replies);
			boards.add(board);
		}
		return boards;
	}

	public Board findByBoardNo(int boardNo) throws FindException {
		Board board = new Board();
		BoardEntity be = br.selectByBoardNo(boardNo);
		board.setBoardContent(be.getBoardContent());
		board.setBoardDt(be.getBoardDt());
		board.setBoardId(be.getBoardId());
		board.setBoardNo(be.getBoardNo());
		board.setBoardTitle(be.getBoardTitle());
		
		List<ReplyEntity> replyList = be.getReplies();
		List<Reply> replies = new ArrayList<>();
		for(ReplyEntity r: replyList) {
			Reply reply = new Reply();
			reply.setReplyBoardNo(r.getReplyBoardNo());
			reply.setReplyContent(r.getReplyContent());
			reply.setReplyDt(r.getReplyDt());
			reply.setReplyId(r.getReplyId());
			reply.setReplyNo(r.getReplyNo());
			reply.setReplyParentNo(r.getReplyParentNo());
		}
		board.setReplies(replies);

		return board;
	}
	
	public void write(Board board) throws AddException {
		BoardEntity be = BoardEntity
						.builder()
						.boardContent(board.getBoardContent())
						.boardId(board.getBoardId())
						.boardTitle(board.getBoardTitle())
						.build();
						
		br.save(be);
		
		
	}
	
	public void modify(Board board) throws ModifyException, FindException {
		Board b = findByBoardNo(board.getBoardNo());
		
		BoardEntity be = BoardEntity
				.builder()
				.boardContent(board.getBoardContent())
				.boardId(board.getBoardId())
				.boardNo(board.getBoardNo())
				.boardTitle(b.getBoardTitle())
				.build();
		br.save(be);
	}
	
	public void remove(int boardNo) throws RemoveException {
		br.deleteBoard(boardNo);
	}
	
	public void writeReply(Reply reply) throws AddException {
		ReplyEntity re = ReplyEntity
						 .builder()
						 .replyBoardNo(reply.getReplyBoardNo())
						 .replyContent(reply.getReplyContent())
						 .replyId(reply.getReplyId())
						 .replyParentNo(reply.getReplyParentNo())
						 .replyDt(new Date(new java.util.Date().getTime()))
						 .build();
		rr.save(re);
	}
	
	public void modifyReply(Reply reply) throws ModifyException {
		ReplyEntity re = ReplyEntity
				 .builder()
				 .replyContent(reply.getReplyContent())
				 .replyNo(reply.getReplyNo())
				 .build();
		rr.save(re);
	}
	
	public void removeReply(int replyNo) throws RemoveException {
		rr.deleteReply(replyNo);
	}
}
